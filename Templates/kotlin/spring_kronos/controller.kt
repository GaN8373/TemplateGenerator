<#assign PascalTableName=NameUtil.toPascalCase(table.getRawName())>
<#assign SnakeCaseName=NameUtil.toSnakeCase(table.getRawName())>
<#assign CameTableName=NameUtil.toCamelCase(table.getRawName())>
<#assign DbStructData=table.getParent()>

#region config
fileName=${PascalTableName}Controller.kt
dir=controllers
#endregion

package ${namespace}.controllers

import com.leinbo.eqm.dto.Response
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.web.bind.annotation.*

/**
 * ${table.getRawComment()}
 * @author
 * @date ${.now?string('yyyy-MM-dd HH:mm:ss')}
 * @description  Controller for ${CameTableName}, generated by Kotoframework code generator
 */

@CrossOrigin
@RestController
@RequestMapping("/${table.getRawName()}")
class ${PascalTableName}Controller(@Autowired val ${CameTableName}Service: ${PascalTableName}Service) {
    @PostMapping("")
    fun create${PascalTableName}(@RequestBody ${CameTableName}: ${PascalTableName}): Response {
        ${CameTableName}Service.create${PascalTableName}(${CameTableName})
        return Response.success()
    }

    @DeleteMapping("{id}")
    fun remove${PascalTableName}(@PathVariable id: Int): Response {
        ${CameTableName}Service.remove${PascalTableName}(id)
        return Response.success()
    }

    @PutMapping("")
    fun update${PascalTableName}(@RequestBody ${CameTableName}: ${PascalTableName}): Response {
        ${CameTableName}Service.update${PascalTableName}(${CameTableName})
        return Response.success()
    }

    @PostMapping("list")
    fun get${PascalTableName}List(
        @RequestBody ${CameTableName}: ${PascalTableName},
        @RequestParam("pageIndex") pageIndex: Int,
        @RequestParam("pageSize") pageSize: Int
    ): Response {
        val (list, total) = ${CameTableName}Service.query${PascalTableName}List(${CameTableName}, pageIndex, pageSize)
        return Response.success(list).put("total", total)
    }

    @GetMapping("{id}")
    fun get${PascalTableName}(@PathVariable id: Int): Response {
        val ${CameTableName} = ${CameTableName}Service.get${PascalTableName}(id)
        return Response.success(${CameTableName})
    }

    @GetMapping("name/list")
    fun getNameList(@RequestParam name: String? = null): Response {
        return Response.success(${CameTableName}Service.getNameList(name)).put("name" to name)
    }

    @GetMapping("email/list")
    fun getEmailList(@RequestParam email: String? = null): Response {
        return Response.success(${CameTableName}Service.getEmailList(email)).put("email" to email)
    }


}
